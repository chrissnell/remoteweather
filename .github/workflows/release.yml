name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  # Build Darwin binaries on macOS runners
  build-darwin:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Build Darwin AMD64
        env:
          CGO_ENABLED: 1
          GOOS: darwin
          GOARCH: amd64
        run: |
          go build -ldflags "-s -w -X github.com/chrissnell/remoteweather/internal/constants.Version=${{ github.ref_name }}" \
            -o dist/remoteweather_darwin_amd64_v1/remoteweather ./cmd/remoteweather

      - name: Build Darwin ARM64
        env:
          CGO_ENABLED: 1
          GOOS: darwin
          GOARCH: arm64
        run: |
          go build -ldflags "-s -w -X github.com/chrissnell/remoteweather/internal/constants.Version=${{ github.ref_name }}" \
            -o dist/remoteweather_darwin_arm64/remoteweather ./cmd/remoteweather

      - name: Upload Darwin artifacts
        uses: actions/upload-artifact@v4
        with:
          name: darwin-binaries
          path: dist/

  # Main release job on Linux
  release:
    runs-on: ubuntu-latest
    needs: build-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Download Darwin artifacts
        uses: actions/download-artifact@v4
        with:
          name: darwin-binaries
          path: dist/

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
          sudo apt-get install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}